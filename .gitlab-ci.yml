image: docker:stable

stages:
  - build
  - deploy

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
  CONTAINER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA
  ASSETS_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/assets:$CI_COMMIT_SHA
  DOCKER_DRIVER: overlay2
  RAILS_ENV: test
  SERVICE_NAME: prod_recipes_api
  ASSETS_NAME: prod_recipes_assets

before_script:
  - docker info
  - 'which ssh-agent || apk add openssh-client'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir ~/.ssh
  - ssh-keyscan $PROD_IP >~/.ssh/known_hosts


build:
  stage: build
  script:
    - docker build -t $CONTAINER_IMAGE .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_IMAGE

    - docker tag $CONTAINER_IMAGE $CI_REGISTRY/$CI_PROJECT_PATH:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:latest

    - docker create --name=tmp_recipes_assets $CONTAINER_IMAGE
    - docker cp tmp_recipes_assets:/app/public pub
    - docker rm -vf tmp_recipes_assets

    - docker build -f Dockerfile-assets -t $ASSETS_IMAGE .
    - docker push $ASSETS_IMAGE
    - docker tag $ASSETS_IMAGE $CI_REGISTRY/$CI_PROJECT_PATH/assets:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/assets:latest

deploy:
  stage: deploy
  script:
    - echo "Deploying $ASSETS_IMAGE to $ASSETS_NAME"
    - ssh $PROD_USER@$PROD_IP "docker service update --force --image $ASSETS_IMAGE --with-registry-auth $ASSETS_NAME"
    - echo "Deploying $CONTAINER_IMAGE to $SERVICE_NAME"
    - ssh $PROD_USER@$PROD_IP "docker service update --force --image $CONTAINER_IMAGE --with-registry-auth $SERVICE_NAME"
  only:
    - master
