image: docker:stable

stages:
  - build
  - test
  - deploy

variables:
  CONTAINER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA
  DOCKER_DRIVER: overlay2
  MYSQL_DATABASE: test
  MYSQL_ROOT_PASSWORD: asdf
  RAILS_ENV: test

before_script:
  - docker info

docker_build:
  stage: build
  script:
    - docker build -t $CONTAINER_IMAGE .

test:
  stage: test
  script:
    - >
      if [ "$(docker ps -af "name=mysql_$(echo "$CI_PROJECT_PATH"|sed 's/\//-/g')" -q)" = "" ]; then
        docker run -itd --name "mysql_$(echo "$CI_PROJECT_PATH"|sed 's/\//-/g')" -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD mysql:5.7.22;
        while [ "$(docker logs "mysql_$(echo "$CI_PROJECT_PATH"|sed 's/\//-/g')" | egrep 'mysqld. ready for connections.')" == "" ]; do sleep 1; done;
        sleep 5;
      fi
    - docker logs --tail=10 "mysql_$(echo "$CI_PROJECT_PATH"|sed 's/\//-/g')"  | tail
    - docker run -i --rm --link "mysql_$(echo "$CI_PROJECT_PATH"|sed 's/\//-/g')":mysql -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD -e RAILS_ENV=$RAILS_ENV $CONTAINER_IMAGE bash -c "bundle exec rake db:drop db:create db:migrate"
    - docker run -i --rm --link "mysql_$(echo "$CI_PROJECT_PATH"|sed 's/\//-/g')":mysql -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD -e RAILS_ENV=$RAILS_ENV $CONTAINER_IMAGE bash -c "bundle exec rspec"

docker_push:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CONTAINER_IMAGE
    - docker tag $CONTAINER_IMAGE $CI_REGISTRY/$CI_PROJECT_PATH:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:latest
  only:
    - master
